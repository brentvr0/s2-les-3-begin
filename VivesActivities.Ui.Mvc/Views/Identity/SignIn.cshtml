@model SignInModel

@{
    var returnUrl = ViewBag.ReturnUrl?.ToString();
}

<form id="account" method="post" asp-route-returnUrl="@returnUrl">
    <h2>Use a local account to log in.</h2>
    <hr />
    <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
    <div class="form-floating mb-3">
        <input asp-for="Username" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com" />
        <label asp-for="Username" class="form-label">Username</label>
        <span asp-validation-for="Username" class="text-danger"></span>
    </div>
    <div class="form-floating mb-3">
        <input asp-for="Password" class="form-control" autocomplete="current-password" aria-required="true" placeholder="password" />
        <label asp-for="Password" class="form-label">Password</label>
        <span asp-validation-for="Password" class="text-danger"></span>
    </div>
    <div class="checkbox mb-3">
        <label asp-for="RememberMe" class="form-label">
            <input class="form-check-input" asp-for="RememberMe" />
            @Html.DisplayNameFor(m => m.RememberMe)
        </label>
    </div>
    <div>
        <button id="login-submit" type="submit" class="w-100 btn btn-lg btn-primary">Log in</button>
    </div>
    <div>
        <p>
            @if (returnUrl is not null)
            {
                <a asp-action="Register" asp-route-returnUrl="@returnUrl">Register as a new user</a>
            }
            else
            {
                <a asp-action="Register">Register as a new user</a>
            }
        </p>
    </div>
</form>